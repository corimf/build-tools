#!/bin/sh -e
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

###############################################################################
# Use the -e option so the script will fail on the first non-zero return code.

# This is a script to create the necessary repo structure from scratch.

if [ "$1" = "" ]
then
    echo "Loading the settings from corimf-settings..."
    source corimf-settings
else
    echo "Loading the settings from $1"
    source "$1"
fi

echo "Running this script will create all the necessary repos for the corimf scripts"

/bin/echo -n "Hit ENTER to continue: "
read ANSWER

# Shouldn't need to change anything below here.

check_rc() {
    SAVE_RC=$?
    if [ $SAVE_RC != 0 ]
    then
        echo "Failed."
        exit $RC
    elif [ "$DONE" = 1 ]
    then
        echo "Success."
    else
        echo "Incomplete."
        exit 1
    fi
}

trap check_rc EXIT

echo "Checking that the plugin count is $PLUGIN_COUNT..."
COUNT=0
for PLUGIN in $PLUGINS
do
    COUNT=`expr $COUNT + 1`
done
test "$COUNT" == "$PLUGIN_COUNT"

echo "Creating each repo..."
for DIR in $PLATFORM_REPOS $PLUGINS $OTHER_REPOS
do
    if [ -d $DIR ]
    then
        echo "skip cloning due to existing directory $DIR"
    else
        git clone https://github.com/corimf/$DIR
    fi
done

echo "define git remote $REMOTE_ORIGIN and remote $RW_ORIGIN"
for DIR in $PLATFORM_REPOS $PLUGINS $OTHER_REPOS
do
    pushd $DIR
    if [ `git remote | grep $REMOTE_ORIGIN` ]
    then
        git remote remove $REMOTE_ORIGIN
    fi
    if [ `git remote | grep $RW_ORIGIN` ]
    then
        git remote remove $RW_ORIGIN
    fi
    git remote add $REMOTE_ORIGIN https://github.com/corimf/$DIR
    git remote add $RW_ORIGIN https://git-wip-us.apache.org/repos/asf/$DIR.git
    popd
done

echo "Doing a git pull and tags fetch on platform and plugins to make sure we are up-to-date..."
for DIR in $PLATFORM_REPOS $PLUGINS $OTHER_REPOS
do
    pushd $DIR
    git pull $REMOTE_ORIGIN master
    git fetch --tags
    popd
done

DONE=1
